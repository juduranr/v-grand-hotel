---
import Layout from '../../layouts/Layout.astro';
import roomsData from '../../data/rooms.json';
import RoomSummary from '../../components/RoomSummary';

// Obtener el nombre de la habitación de la URL
const { name } = Astro.params;

// Función para convertir el nombre de la habitación a un formato comparable
function normalizeRoomName(roomTitle: string): string {
	return roomTitle.toLowerCase().replace(/\s+/g, '-');
}

// Buscar la habitación por el nombre normalizado
const room = roomsData.find(room => normalizeRoomName(room.title) === name);

// Si la habitación no existe, redirigir a la página principal de habitaciones
if (!room) {
	return Astro.redirect('/rooms');
}
---

<Layout>
	<div class="room-detail-page">
		<div class="hero-section" style={`background-image: url('/images/${room.banner}')`}>
			<div class="room-overlay"></div>
			<div class="hero-content">
				<h1 class="hero-title">{room.title}</h1>
			</div>
		</div>

		<div class="room-content">
			<RoomSummary client:load room={room} />
			<div class="gallery-section">
				{(() => {
					const images = room.gallery && room.gallery.length > 0 ? room.gallery : [];
					const layoutSpans = [6, 6, 4, 4, 4, 6, 6]; // 2-3-2
					const items = layoutSpans.map((span, idx) => ({
						image: images.length ? images[idx % images.length] : '',
						alt: `${room.title} - Imagen ${idx + 1}`,
						span
					}));
					return (
						<div class="gallery-grid">
							{items.map((it) => (
								<div class={`grid-item span-${it.span}`}>
									{it.image && (
										<img src={`/src/assets/images/${it.image}`} alt={it.alt} loading="lazy" />
									)}
								</div>
							))}
						</div>
					);
				})()}
			</div>


		</div>
	</div>
</Layout>

<style>
	.room-detail-page {
		min-height: 100vh;
	}

	/* Hero similar a RoomsPage */
	.hero-section {
		height: 100vh;
		width: 100%;
		background-size: cover;
		background-position: center;
		background-repeat: no-repeat;
		background-attachment: fixed;
		position: relative;
		display: flex;
		align-items: flex-end;
		justify-content: center;
		padding-bottom: 20px;
		overflow: hidden;
	}

	.room-overlay {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background: rgba(0, 0, 0, 0.35);
		z-index: 1;
		pointer-events: none;
	}

	.hero-title {
		font-size: 12rem;
		font-weight: 400;
		color: white;
		text-align: center;
		width: 100%;
		margin: 0;
		will-change: transform;
		font-family: 'BeaufortforLOL', sans-serif;
		position: relative;
		z-index: 10;
		opacity: 1 !important;
		bottom: -20vh;
		text-transform: uppercase;
	}

	.hero-description {
		font-size: 1.3rem;
		max-width: 800px;
		margin: 0 auto 2rem;
		line-height: 1.6;
		opacity: 0.9;
	}

	.room-meta {
		display: flex;
		justify-content: center;
		gap: 2rem;
		flex-wrap: wrap;
	}

	.meta-item {
		display: flex;
		align-items: center;
		gap: 0.5rem;
		background: rgba(255, 255, 255, 0.1);
		padding: 0.75rem 1.5rem;
		border-radius: 25px;
		backdrop-filter: blur(10px);
	}

	.room-content {
		max-width: 1200px;
		margin: 0 auto;
		padding: 4rem 2rem;
		display: flex;
		flex-direction: column;
		gap: 190px;
	}

	.gallery-section {
		display: flex;
		flex-direction: column;
		gap: 1rem;
	}

	.main-image img {
		width: 100%;
		height: 400px;
		object-fit: cover;
		border-radius: 12px;
	}

	.thumbnail-grid {
		display: grid;
		grid-template-columns: repeat(2, 1fr);
		gap: 1rem;
	}

	.thumbnail img {
		width: 100%;
		height: 150px;
		object-fit: cover;
		border-radius: 8px;
		cursor: pointer;
		transition: transform 0.3s ease;
	}

	.thumbnail img:hover {
		transform: scale(1.05);
	}

	/* Nuevo grid 2-3-2 con items anchos (6 cols) y angostos (4 cols) */
	.gallery-grid {
		display: grid;
		grid-template-columns: repeat(12, 1fr);
		gap: 12px;
	}

	.grid-item {
		position: relative;
		border-radius: 0;
		overflow: hidden;
	}

	.grid-item img {
		width: 100%;
		height: 100%;
		object-fit: cover;
		display: block;
	}

	/* Spans */
	.span-6 { grid-column: span 6; height: 486px; }
	.span-4 { grid-column: span 4; height: 243px; }

	/* Responsive ajustes */
	@media (max-width: 1024px) {
		.span-6 { grid-column: span 6; height: 320px; }
		.span-4 { grid-column: span 6; height: 260px; }
	}

	@media (max-width: 768px) {
		.gallery-grid { grid-template-columns: repeat(6, 1fr); }
		.span-6 { grid-column: span 6; height: 240px; }
		.span-4 { grid-column: span 3; height: 200px; }
	}

	@media (max-width: 480px) {
		.gallery-grid { grid-template-columns: repeat(4, 1fr); gap: 8px; }
		.span-6 { grid-column: span 4; height: 200px; }
		.span-4 { grid-column: span 2; height: 160px; }
	}





	@media (max-width: 768px) {
		.hero-title {
			font-size: 2.5rem;
		}

		.room-content {
			gap: 2rem;
			padding: 2rem 1rem;
		}

		.room-meta {
			flex-direction: column;
			align-items: center;
		}

		.cta-section {
			flex-direction: column;
		}

		.hero-section {
			background-attachment: scroll;
		}
	}
</style>
